{"ast":null,"code":"var _jsxFileName = \"/home/thamirys/gitHub/portifolio/src/context/Provider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Projects } from '../Data';\nimport MyContext from './MyContext';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Provider({\n  children\n}) {\n  _s();\n\n  const [projectById, setProjectById] = useState([]);\n  const [projectData] = useState(Projects);\n\n  const getProjectById = id => {\n    const currentProject = projectData.filter(project => project.id === id);\n    setProjectById(currentProject);\n  };\n\n  const context = {\n    projectById,\n    getProjectById,\n    projectData\n  };\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: context,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Provider, \"eTwu5Z6mSR2Vyvp3W8L7f35jcEc=\");\n\n_c = Provider;\nProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default Provider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"sources":["/home/thamirys/gitHub/portifolio/src/context/Provider.js"],"names":["React","useState","Projects","MyContext","PropTypes","Provider","children","projectById","setProjectById","projectData","getProjectById","id","currentProject","filter","project","context","propTypes","node","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAgC;AAAA;;AAC9B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACQ,WAAD,IAAgBR,QAAQ,CAACC,QAAD,CAA9B;;AAEA,QAAMQ,cAAc,GAAIC,EAAD,IAAQ;AAC7B,UAAMC,cAAc,GAAGH,WAAW,CAACI,MAAZ,CAAoBC,OAAD,IAAaA,OAAO,CAACH,EAAR,KAAeA,EAA/C,CAAvB;AACAH,IAAAA,cAAc,CAACI,cAAD,CAAd;AACD,GAHD;;AAKA,QAAMG,OAAO,GAAG;AACdR,IAAAA,WADc;AAEdG,IAAAA,cAFc;AAGdD,IAAAA;AAHc,GAAhB;AAMA,sBACE,QAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,KAAK,EAAGM,OAA5B;AAAA,cACCT;AADD;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GApBQD,Q;;KAAAA,Q;AAsBTA,QAAQ,CAACW,SAAT,GAAqB;AACnBV,EAAAA,QAAQ,EAAEF,SAAS,CAACa,IAAV,CAAeC;AADN,CAArB;AAIA,eAAeb,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Projects } from '../Data'\nimport MyContext from './MyContext';\nimport PropTypes from 'prop-types';\n\nfunction Provider({ children }) {\n  const [projectById, setProjectById] = useState([]);\n  const [projectData] = useState(Projects);\n\n  const getProjectById = (id) => {\n    const currentProject = projectData.filter((project) => project.id === id);\n    setProjectById(currentProject);\n  }\n\n  const context = {\n    projectById,\n    getProjectById,\n    projectData,\n  };\n\n  return (\n    <MyContext.Provider value={ context }>\n    {children}\n  </MyContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Provider;"]},"metadata":{},"sourceType":"module"}